version: '3.8'

services:
  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PostgreSQL for configuration and alert history
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: anomaly_detection
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Kafka for real-time data streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Main application
  anomaly-detector:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
      - kafka
    environment:
      - DATABASE_URL=postgresql://admin:password123@postgres:5432/anomaly_detection
      - REDIS_URL=redis://redis:6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # Dashboard
  dashboard:
    build: 
      context: .
      dockerfile: Dockerfile.dashboard
    ports:
      - "8501:8501"
    depends_on:
      - anomaly-detector
    environment:
      - API_BASE_URL=http://anomaly-detector:8000
    command: streamlit run src/dashboard/app.py --server.port=8501 --server.address=0.0.0.0

  # Celery worker for background tasks
  celery-worker:
    build: .
    depends_on:
      - redis
      - postgres
    environment:
      - DATABASE_URL=postgresql://admin:password123@postgres:5432/anomaly_detection
      - REDIS_URL=redis://redis:6379
    command: celery -A src.tasks.celery_app worker --loglevel=info

  # Celery beat for scheduled tasks
  celery-beat:
    build: .
    depends_on:
      - redis
      - postgres
    environment:
      - DATABASE_URL=postgresql://admin:password123@postgres:5432/anomaly_detection
      - REDIS_URL=redis://redis:6379
    command: celery -A src.tasks.celery_app beat --loglevel=info

volumes:
  redis_data:
  postgres_data:
