version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: anomaly_detection
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - anomaly-detection-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - anomaly-detection-network

  pulsar:
    image: apachepulsar/pulsar:latest
    ports:
      - "6650:6650"  # Pulsar broker port
      - "8080:8080"  # Pulsar admin port
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/standalone.conf &&
               bin/pulsar standalone"
    volumes:
      - pulsar_data:/pulsar/data
    networks:
      - anomaly-detection-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - anomaly-detection-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - anomaly-detection-network

  web-dashboard:
    build: ../web-dashboard
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api/v1
    depends_on:
      - api-gateway
    networks:
      - anomaly-detection-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  pulsar_data:

networks:
  anomaly-detection-network:
    driver: bridge